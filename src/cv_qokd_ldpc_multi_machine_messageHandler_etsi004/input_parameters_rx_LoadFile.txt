//------------INPUTPARAMETERS-------------
//
//---------GENERAL CONFIGURATION---------
verboseMode=false
saveSignals=true
saveSymmetricKeys=true
logValue=false
//
txIpAddress=127.0.0.1
txReceivingPort=23034
rxIpAddress=127.0.0.1
rxReceivingPort=23035
etsiAddress=127.0.0.1
etsiPort=23035
node1_uuid=aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa
node2_uuid=bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb
App=AtoB
keyStreamId=4293b0e9-75fc-4d6c-9880-f675c8b58b66
keySource=etsi
saveKeys=false
rawKeyFolder=raw_keys
//
asciiFileNameTailNumberModulos=5
asciiFolderName=C:\keys_rx
insertEndLine=false
replacePreviousKeys=false
//
// Buffer size: greater sizes improve running times but the system can block
buffSize=1024
//
bypassParameterEstimation=true
bypassErrorCorrection=false
bypassPrivacyAmplification=true
//
// Qubit transmission rate
bitRate=1e6
//
// Defines the probability of a double click happening
probabilityOfDoubleClick=0
//
// Number which will represent doubleClick events
doubleClickNumber=2
//
// Number which will represent noClick events
noClickNumber=3
//
//
parityCheckMatrixFolderName=parity_check_matrix_folder
//
//parityCheckMatrixFileName=sparseParityCheckMatrix_n1944_k972_nonZeros6885.txt
parityCheckMatrixFileName=sparseParityCheckMatrix_n1944_k972_nonZeros6885.dat
codeLength=1944
codeRank=972
//parityCheckMatrixFileName=sparseParityCheckMatrix_n10000_k200_nonZeros32800.dat
ldpcErrorCorrectionAlgorithMaxIterations=20
numberOfDummyBitsPerBitFillingPeriod=17
numberOfDataBitsPerBitFillingPeriod=3
hashLength=20
//
// Total number of qubits to transmit.
// -1 sets the simulation to operate continuously until stopped by the user 
numberOfBits=-1
//
// Number of bits to decrease in each hashed segment, in addition to the
// quantity estimated from  the QBER.
systematicSecurityParameter=1
//
// Probability of error in the quantum channel [0;1]
qber=0.40
//
//
// Total number of passes during Cascade. Increasing the number improves error
// correction effectiveness, but increase channel uses and may decrease
// efficiency. Should be balanced with qValue
numPasses=1
//
// If true, during Cascade, each pass after the first one double the
// partitioning size. This greatly improves efficiency and slightly reduces
// error correction effectiveness
doublePartitionSize=false
//
//
// Parameter from which the Cascade partitioning sizes are calculated.
// The partition size for a given QBER is given by qValue/QBER.
qValue=0.73
//
// Number of bits sampled to estimate the QBER //1000
parameterEstimationNBits=100
//
// Number of bits to gather before sampling to estimate the QBER //5000
parameterEstimationNBitsToStart=100
//
// Minimum number of bits to gather before starting Cascade
minimumSyndromeSize=100
//
// Maximum number of bits to use during a Cascade procedure
maximumSyndromeSize=1000
//
//
//
// Efficiency of the detectors in the quantum channel
detectorEfficiency=1
//
// Fiber attenuation per Km in dB 
fiberAttenuation_dB=0
//
// Length of fiber of the quantum channel in Km
fiberLength=0
//
// Insertion losses of the quantum channel
insertionLosses_dB=0
//
// Average number of photons per pulse at the beginning of transmission
numberOfPhotonsPerInputPulse=100
//
// Deadtime of the detectors
deadTime=0
//
// QBER security threshold: if QBER Upper bound is higher than this, a warning is issued and no bits
// are processed into the key
qberThreshold=0.15
//
// Parameter estimation confidence interval to calculate upper and lower bounds. From 0 to 1.
confidenceInterval=0.95
//
// If true, interface shows the data from Bob. If false, interface shows the
// data from Alice. In the case of remote communication, if it wants to show a
// data from somewhere it does not have access to, it won't show anything
printRecv=false